{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates a EC2 Instance and Load Balancer and install Docker",

    "Parameters": {
        "InstanceType": {
            "Description":"EC2 Instance type",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": ["t2.nano","t2.micro", "t2.small", "t2.medium", "t2.large"],
            "ConstraintDescription": "Must select a valid EC2 instance type."
        },

        "VPC": {
            "Type": "AWS::EC2::VPC::Id"
        },

        "Subnets": {
            "Type": "List<AWS::EC2::Subnet::Id>"
        },

        "KeyName": {
            "Description": "Existing KeyName to enable SSH",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must select an exicting EC2 KeyPair."
        },

        "SSHLocation": {
            "Description": "IP addresses for SSH the EC2 instance",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },

    "Mappings": {
        "AWSRegionAMI": {
            "us-east-1": {"HVM": "ami-aa2ea6d0"}
        }
    },

    "Resources": {
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": { "Ref": "SSHLocation"}}, 
                    {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}]
                }
          },

        "LBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH access via port 22",
                "SecurityGroupIngress": [
                    {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}
                ]
            }
        },

        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": {"Ref": "AWS::Region"} },
                "SecurityGroups": [
                    {"Fn::GetAtt": ["LBSecurityGroup", "GroupId"]}
                ],
                "Listeners": [{
                    "LoadBalancerPort": "80",
                    "InstancePort": "8080",
                    "Protocol": "HTTP" 
                }],
                "HealthCheck": {
                    "Target": "TCP:8080",
                    "HealthyThreshold": "3",
                    "UnhealthyThreshold": "5",
                    "Interval": "30",
                    "Timeout": "5"
                }
            }
        },

        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "KeyName": { "Ref": "KeyName" },
                "ImageId": { "Fn::FindInMap": ["AWSRegionAMI", {"Ref": "AWS::Region"}, "HVM"]},
                "SecurityGroups": [ { "Ref": "InstanceSecurityGroup" } ],
                "InstanceType": { "Ref": "InstanceType" },
                "UserData": {"Fn::Base64": {"Fn::Join": ["", [
                    "#!/bin/bash -xe\n",
                    "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n",

                    "# INSTALL TOOLS\n",
                    "apt-get update && apt-get -y install python python-pip wget\n",
                    "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",

                    "# INSTALL DOCKER\n",
                    "apt-get update\n",
                    "apt-get install -y apt-transport-https ca-certificates curl software-properties-common\n",
                    "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n",
                    "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n",
                    "apt-get update && apt-get install -y docker-ce\n",
                    "usermod -aG docker ubuntu\n"

                ]]}}
            }
        },

        "AutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": { "Ref": "LaunchConfig" },
                "MinSize": "1",
                "MaxSize": "1",
                "DesiredCapacity": "1",
                "LoadBalancerNames": [ { "Ref": "LoadBalancer" } ],
                "AvailabilityZones": { "Fn::GetAZs": {"Ref": "AWS::Region"} }
            }
        }
    } 
}
